name: Sauce Pipeline Browser Tests

on:
  pull_request:
  push:
    paths-ignore:
      - '.github/**'
      - '.docsearch/**'
      - 'README.md'
  workflow_dispatch:

env:
  SAUCE_ACCESS_KEY: ${{secrets.SAUCE_ACCESS_KEY}}
  SAUCE_USERNAME: ${{secrets.SAUCE_USERNAME}}
  SAUCECTL_VERSION: "0.68.3"
  SC_VERSION: "4.7.1"
  ALGOLIA_APP_ID: ${{secrets.ALGOLIA_APP_ID}}
  ALGOLIA_KEY: ${{secrets.ALGOLIA_KEY}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - uses: actions/cache@v2
        id: cache-npm-packages
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/package.json') }}

      - name: Install Dependencies
        if: steps.cache-npm-packages.outputs.cache-hit != 'true'
        run: |
          npm install

      - uses: actions/cache@v2
        id: cache-build
        with:
          path: |
            build
          key: ${{ runner.os }}-${{ github.sha }}

      - name: Run Build
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          npm run build

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v2
        id: cache-build
        with:
          path: |
            build
          key: ${{ runner.os }}-${{ github.sha }}

      - name: Install Dependencies
        if: steps.cache-npm-packages.outputs.cache-hit != 'true'
        run: |
          npm install

      - name: Run Build
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          npm run build

      - name: Create Tunnel
        run: |
          set -e
          curl -L -s https://saucelabs.com/downloads/sc-${SC_VERSION}-linux.tar.gz | sudo tar -xvz
          sc-${SC_VERSION}-linux/bin/sc -u $SAUCE_USERNAME -k $SAUCE_ACCESS_KEY -i proxy-tunnel-$GITHUB_RUN_ID -r us-west -l - &
      - name: install saucectl
        run: |
          curl -L -s https://github.com/saucelabs/saucectl/releases/download/v${SAUCECTL_VERSION}/saucectl_${SAUCECTL_VERSION}_linux_64-bit.tar.gz | sudo tar -xvz -C /usr/bin/
      - name: saucectl run
        run: |
          # Expose website
          cd build/ && python3 -m http.server 8000 &

          saucectl run -c ./.sauce/config.yml --tunnel-name proxy-tunnel-$GITHUB_RUN_ID
  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - run: pip install crcmod

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.RUN_PROJECT }}
          service_account_key: ${{ secrets.RUN_SA_KEY }}
          export_default_credentials: true

      - uses: actions/cache@v2
        id: cache-build
        with:
          path: |
            build
          key: ${{ runner.os }}-${{ github.sha }}

      - name: Install Dependencies
        if: steps.cache-npm-packages.outputs.cache-hit != 'true'
        run: |
          npm install

      - name: Run Build
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          npm run build

      - name: Deploy to Bucket
        run: |-
          cd build
          gsutil -m rsync -R -d . ${{ secrets.GCS_BUCKET }}

  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - run: pip install crcmod

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.RUN_PROJECT_PROD }}
          service_account_key: ${{ secrets.RUN_SA_KEY_PROD }}
          export_default_credentials: true

      - uses: actions/cache@v2
        id: cache-build
        with:
          path: |
            build
          key: ${{ runner.os }}-${{ github.sha }}

      - name: Install Dependencies
        if: steps.cache-npm-packages.outputs.cache-hit != 'true'
        run: |
          npm install

      - name: Run Build
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          npm run build

      - name: Deploy to Bucket
        run: |-
          cd build
          gsutil -m rsync -R -d . ${{ secrets.GCS_PROD_BUCKET }}
